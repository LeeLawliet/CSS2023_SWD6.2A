{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport { catchError } from \"rxjs\";\nimport { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./auth.service\";\nexport let DroneService = /*#__PURE__*/(() => {\n  class DroneService {\n    constructor(httpClient, authService) {\n      this.httpClient = httpClient;\n      this.authService = authService;\n      this.endpoint = \"https://css.teknologija.com/api/registrations\";\n      this.token = \"\";\n    }\n    getHeaders() {\n      this.token = this.authService.getAccessToken();\n      return new HttpHeaders({\n        'Authorization': `Bearer ${this.token}`,\n        'Content-Type': 'application/json'\n      });\n    }\n    getDrones() {\n      return this.httpClient.get(this.endpoint, {\n        headers: this.getHeaders()\n      });\n    }\n    getDroneById(id) {\n      return this.httpClient.get(this.endpoint + \"/\" + id, {\n        headers: this.getHeaders()\n      });\n    }\n    addDrone(droneToAdd) {\n      return this.httpClient.post(this.endpoint, droneToAdd, {\n        headers: this.getHeaders()\n      }).pipe(catchError(error => {\n        window.alert('Error: Problem adding drone, check your entries.');\n        return of();\n      }));\n      ;\n    }\n    updateDrone(id, droneToUpdate) {\n      return this.httpClient.patch(this.endpoint + \"/\" + id, droneToUpdate, {\n        headers: this.getHeaders()\n      }).pipe(catchError(error => {\n        window.alert('Error: Problem updating drone, check your entries.');\n        return of();\n      }));\n    }\n    deleteDrone(id) {\n      return this.httpClient.delete(this.endpoint + \"/\" + id, {\n        headers: this.getHeaders()\n      });\n    }\n    static #_ = this.ɵfac = function DroneService_Factory(t) {\n      return new (t || DroneService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: DroneService,\n      factory: DroneService.ɵfac\n    });\n  }\n  return DroneService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}