{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport { BehaviorSubject, catchError, of, tap } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(httpClient) {\n      this.httpClient = httpClient;\n      this.endpoint = \"https://css.teknologija.com/api/auth\";\n      this.accessToken = null;\n      this.isAuthenticatedSubject = new BehaviorSubject(false);\n      this.isAuthenticated$ = this.isAuthenticatedSubject.asObservable();\n      this.httpHeader = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n    }\n    authenticate(employee) {\n      return this.httpClient.post(this.endpoint, employee, this.httpHeader).pipe(tap(response => {\n        const accessToken = response.accessToken;\n        this.setAccessToken(accessToken);\n        this.isAuthenticatedSubject.next(true);\n      }), catchError(error => {\n        window.alert('Error: Problem logging in, check your entries.');\n        return of();\n      }));\n    }\n    logout() {\n      this.setAccessToken('');\n      this.isAuthenticatedSubject.next(false);\n    }\n    isAuthenticated() {\n      return this.isAuthenticatedSubject.value;\n    }\n    setAccessToken(token) {\n      this.accessToken = token;\n    }\n    getAccessToken() {\n      return this.accessToken;\n    }\n    static #_ = this.ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}