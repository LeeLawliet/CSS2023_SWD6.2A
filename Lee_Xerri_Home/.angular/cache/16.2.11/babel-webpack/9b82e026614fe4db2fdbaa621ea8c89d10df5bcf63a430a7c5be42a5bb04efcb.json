{"ast":null,"code":"import * as XLSX from 'xlsx';\n// @ts-ignore\nimport * as html2pdf from 'html2pdf.js';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/drone.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nconst _c0 = function (a1) {\n  return [\"/drones\", a1];\n};\nfunction DroneListComponent_div_0_tr_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\")(12, \"button\", 5);\n    i0.ɵɵtext(13, \"View\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"td\")(15, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function DroneListComponent_div_0_tr_22_Template_button_click_15_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const drone_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r3.updateDrone(drone_r2.id, drone_r2));\n    });\n    i0.ɵɵtext(16, \"Update\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(17, \"td\")(18, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function DroneListComponent_div_0_tr_22_Template_button_click_18_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const drone_r2 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.deleteDrone(drone_r2.id));\n    });\n    i0.ɵɵtext(19, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const drone_r2 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(drone_r2.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(drone_r2.brandName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(drone_r2.model);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(drone_r2.ownerIdCardNumber);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(drone_r2.ownerLastName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(8, _c0, drone_r2.id));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.isClerk());\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.isClerk() || ctx_r1.isManager());\n  }\n}\nfunction DroneListComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function DroneListComponent_div_0_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.exportToExcel(\"exported-drone-list\"));\n    });\n    i0.ɵɵtext(2, \"Export To Excel\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"br\")(4, \"br\");\n    i0.ɵɵelementStart(5, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function DroneListComponent_div_0_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.exportToPDF());\n    });\n    i0.ɵɵtext(6, \"Export To PDF\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"br\");\n    i0.ɵɵelementStart(8, \"table\", 3)(9, \"thead\")(10, \"tr\")(11, \"th\");\n    i0.ɵɵtext(12, \"ID\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"th\");\n    i0.ɵɵtext(14, \"Brand\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"th\");\n    i0.ɵɵtext(16, \"Model\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"th\");\n    i0.ɵɵtext(18, \"Owner ID Card Number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"th\");\n    i0.ɵɵtext(20, \"Owner Last name\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(21, \"tbody\");\n    i0.ɵɵtemplate(22, DroneListComponent_div_0_tr_22_Template, 20, 10, \"tr\", 4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(22);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.drones);\n  }\n}\nexport let DroneListComponent = /*#__PURE__*/(() => {\n  class DroneListComponent {\n    constructor(droneService, route, router) {\n      this.droneService = droneService;\n      this.route = route;\n      this.router = router;\n      this.title = \"Drone Registration\";\n      this.eventMessage = \"\";\n      this.drones = [];\n      this.colour = \"green\";\n      this.imageWidth = 40;\n      this.imageMargin = 2;\n      this.areImagesVisible = true;\n    }\n    ngOnInit() {\n      this.initialiseDrones();\n      this.employee = history.state.employee;\n    }\n    getTitle() {\n      return this.title;\n    }\n    toggleImages() {\n      this.areImagesVisible = !this.areImagesVisible;\n    }\n    initialiseDrones() {\n      this.droneService.getDrones().subscribe(res => {\n        this.drones = res;\n      });\n    }\n    updateDrone(id, drone) {\n      this.router.navigate(['/drones/update', id], {\n        state: {\n          droneDetails: drone\n        }\n      });\n    }\n    deleteDrone(id) {\n      if (confirm(\"Are you sure you want to delete drone with ID \" + id + \"?\")) {\n        this.droneService.deleteDrone(id).subscribe(res => {\n          this.drones = res;\n        });\n        this.initialiseDrones();\n      }\n    }\n    onNotify(message) {\n      console.log(message);\n      this.eventMessage = message;\n    }\n    isClerk() {\n      return this.employee?.role === 'Clerk';\n    }\n    isManager() {\n      return this.employee?.role === 'Manager';\n    }\n    exportToExcel(fileName) {\n      const ws = XLSX.utils.json_to_sheet(this.drones);\n      const wb = XLSX.utils.book_new();\n      XLSX.utils.book_append_sheet(wb, ws, 'DroneRegistrations');\n      XLSX.writeFile(wb, `${fileName}.xlsx`);\n    }\n    exportToPDF() {\n      const content = this.generatePDF();\n      const options = {\n        margin: 10,\n        filename: 'drones-list.pdf',\n        jsPDF: {\n          unit: 'mm',\n          format: 'a4',\n          orientation: 'portrait'\n        }\n      };\n      const pdfPromise = html2pdf().from(content).set(options).outputPdf();\n      pdfPromise.then(pdfBlob => {\n        // Create a Blob URL for the PDF blob\n        const blobUrl = URL.createObjectURL(pdfBlob);\n        // Create a link element\n        const link = document.createElement('a');\n        link.href = blobUrl;\n        link.download = options.filename;\n        // Append the link to the document\n        document.body.appendChild(link);\n        // Trigger a click on the link to start the download\n        link.click();\n        // Remove the link from the document\n        document.body.removeChild(link);\n        // Cleanup: Revoke the Blob URL\n        URL.revokeObjectURL(blobUrl);\n      });\n    }\n    generatePDF() {\n      const container = document.createElement('div');\n      // Create a table for the drone list\n      const table = document.createElement('table');\n      table.style.width = '100%';\n      table.style.borderCollapse = 'collapse';\n      // Add table headers\n      const headers = ['Name', 'Model', 'Manufacturer'];\n      const headerRow = table.insertRow();\n      headers.forEach(header => {\n        const th = document.createElement('th');\n        th.style.border = '1px solid #dddddd';\n        th.textContent = header;\n        headerRow.appendChild(th);\n      });\n      // Add table rows with drone information\n      this.drones.forEach(drone => {\n        const row = table.insertRow();\n        Object.values(drone).forEach(value => {\n          const cell = row.insertCell();\n          cell.style.border = '1px solid #dddddd';\n          cell.textContent = value;\n        });\n      });\n      container.appendChild(table);\n      return container;\n    }\n    static #_ = this.ɵfac = function DroneListComponent_Factory(t) {\n      return new (t || DroneListComponent)(i0.ɵɵdirectiveInject(i1.DroneService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: DroneListComponent,\n      selectors: [[\"app-drone-list\"]],\n      decls: 1,\n      vars: 1,\n      consts: [[\"class\", \"table-responsive mt-3\", 4, \"ngIf\"], [1, \"table-responsive\", \"mt-3\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"table\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-primary\", \"mt-2\", 3, \"routerLink\"], [1, \"btn\", \"btn-success\", \"mt-2\", 3, \"disabled\", \"click\"], [1, \"btn\", \"btn-danger\", \"mt-2\", 3, \"disabled\", \"click\"]],\n      template: function DroneListComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, DroneListComponent_div_0_Template, 23, 1, \"div\", 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", ctx.drones != null && ctx.drones.length > 0);\n        }\n      },\n      dependencies: [i3.NgForOf, i3.NgIf, i2.RouterLink]\n    });\n  }\n  return DroneListComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}