{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport { catchError } from \"rxjs\";\nimport { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./auth.service\";\nexport class DroneService {\n  constructor(httpClient, authService) {\n    this.httpClient = httpClient;\n    this.authService = authService;\n    this.endpoint = \"https://css.teknologija.com/api/registrations\";\n    this.token = \"\";\n  }\n  getHeaders() {\n    this.token = this.authService.getAccessToken();\n    return new HttpHeaders({\n      'Authorization': `Bearer ${this.token}`,\n      'Content-Type': 'application/json'\n    });\n  }\n  getDrones() {\n    return this.httpClient.get(this.endpoint, {\n      headers: this.getHeaders()\n    });\n  }\n  getDroneById(id) {\n    return this.httpClient.get(this.endpoint + \"/\" + id, {\n      headers: this.getHeaders()\n    });\n  }\n  addDrone(droneToAdd) {\n    return this.httpClient.post(this.endpoint, droneToAdd, {\n      headers: this.getHeaders()\n    }).pipe(catchError(error => {\n      window.alert('Error: Problem adding drone, check your entries.');\n      return of();\n    }));\n    ;\n  }\n  updateDrone(id, droneToUpdate) {\n    return this.httpClient.patch(this.endpoint + \"/\" + id, droneToUpdate, {\n      headers: this.getHeaders()\n    }).pipe(catchError(error => {\n      window.alert('Error: Problem updating drone, check your entries.');\n      return of();\n    }));\n  }\n  deleteDrone(id) {\n    return this.httpClient.delete(this.endpoint + \"/\" + id, {\n      headers: this.getHeaders()\n    });\n  }\n  static #_ = this.ɵfac = function DroneService_Factory(t) {\n    return new (t || DroneService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DroneService,\n    factory: DroneService.ɵfac\n  });\n}","map":{"version":3,"names":["HttpHeaders","catchError","of","DroneService","constructor","httpClient","authService","endpoint","token","getHeaders","getAccessToken","getDrones","get","headers","getDroneById","id","addDrone","droneToAdd","post","pipe","error","window","alert","updateDrone","droneToUpdate","patch","deleteDrone","delete","_","i0","ɵɵinject","i1","HttpClient","i2","AuthService","_2","factory","ɵfac"],"sources":["/home/student/CSS2023_SWD6.2A/Lee_Xerri_Home/src/app/services/drone.service.ts"],"sourcesContent":["import { HttpClient, HttpErrorResponse, HttpHeaders, HttpParams } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable, catchError } from \"rxjs\";\nimport { Drone } from \"../dto/drone.dto\";\nimport { DroneAddUpdate } from \"../dto/drone-add-update.dto\";\nimport { AuthService } from \"./auth.service\";\nimport { of } from 'rxjs';\n\n@Injectable()\nexport class DroneService {\n\n    endpoint: string = \"https://css.teknologija.com/api/registrations\";\n    token: string | null = \"\";\n\n    constructor(private httpClient: HttpClient, private authService: AuthService) {\n        \n    }\n\n    private getHeaders(): HttpHeaders {\n        this.token = this.authService.getAccessToken();\n        return new HttpHeaders({\n            'Authorization': `Bearer ${this.token}`,\n            'Content-Type': 'application/json',\n        });\n    }\n\n    getDrones(): Observable<Drone[]> {\n        return this.httpClient.get<Drone[]>(this.endpoint, { headers: this.getHeaders() });\n    }\n\n    getDroneById(id: number): Observable<Drone> {\n        return this.httpClient.get<Drone>(this.endpoint + \"/\" + id, { headers: this.getHeaders() });\n    } \n\n    addDrone(droneToAdd: DroneAddUpdate): Observable<Drone> {\n        return this.httpClient.post<Drone>(this.endpoint, droneToAdd, { headers: this.getHeaders() })\n        .pipe(\n            catchError((error: HttpErrorResponse) : Observable<Drone> => {\n                window.alert('Error: Problem adding drone, check your entries.');\n                return of();\n            })\n        );;\n        \n    }\n\n    updateDrone(id: number, droneToUpdate: DroneAddUpdate): Observable<Drone> {\n        return this.httpClient.patch<Drone>(this.endpoint + \"/\" + id, droneToUpdate, { headers: this.getHeaders() })\n        .pipe(\n            catchError((error: HttpErrorResponse) : Observable<Drone> => {\n                window.alert('Error: Problem updating drone, check your entries.');\n                return of();\n            })\n        );\n    }\n\n    deleteDrone(id: number): Observable<any> {\n        return this.httpClient.delete(this.endpoint + \"/\" + id, { headers: this.getHeaders() });\n    }\n}"],"mappings":"AAAA,SAAwCA,WAAW,QAAoB,sBAAsB;AAE7F,SAAqBC,UAAU,QAAQ,MAAM;AAI7C,SAASC,EAAE,QAAQ,MAAM;;;;AAGzB,OAAM,MAAOC,YAAY;EAKrBC,YAAoBC,UAAsB,EAAUC,WAAwB;IAAxD,KAAAD,UAAU,GAAVA,UAAU;IAAsB,KAAAC,WAAW,GAAXA,WAAW;IAH/D,KAAAC,QAAQ,GAAW,+CAA+C;IAClE,KAAAC,KAAK,GAAkB,EAAE;EAIzB;EAEQC,UAAUA,CAAA;IACd,IAAI,CAACD,KAAK,GAAG,IAAI,CAACF,WAAW,CAACI,cAAc,EAAE;IAC9C,OAAO,IAAIV,WAAW,CAAC;MACnB,eAAe,EAAE,UAAU,IAAI,CAACQ,KAAK,EAAE;MACvC,cAAc,EAAE;KACnB,CAAC;EACN;EAEAG,SAASA,CAAA;IACL,OAAO,IAAI,CAACN,UAAU,CAACO,GAAG,CAAU,IAAI,CAACL,QAAQ,EAAE;MAAEM,OAAO,EAAE,IAAI,CAACJ,UAAU;IAAE,CAAE,CAAC;EACtF;EAEAK,YAAYA,CAACC,EAAU;IACnB,OAAO,IAAI,CAACV,UAAU,CAACO,GAAG,CAAQ,IAAI,CAACL,QAAQ,GAAG,GAAG,GAAGQ,EAAE,EAAE;MAAEF,OAAO,EAAE,IAAI,CAACJ,UAAU;IAAE,CAAE,CAAC;EAC/F;EAEAO,QAAQA,CAACC,UAA0B;IAC/B,OAAO,IAAI,CAACZ,UAAU,CAACa,IAAI,CAAQ,IAAI,CAACX,QAAQ,EAAEU,UAAU,EAAE;MAAEJ,OAAO,EAAE,IAAI,CAACJ,UAAU;IAAE,CAAE,CAAC,CAC5FU,IAAI,CACDlB,UAAU,CAAEmB,KAAwB,IAAwB;MACxDC,MAAM,CAACC,KAAK,CAAC,kDAAkD,CAAC;MAChE,OAAOpB,EAAE,EAAE;IACf,CAAC,CAAC,CACL;IAAC;EAEN;EAEAqB,WAAWA,CAACR,EAAU,EAAES,aAA6B;IACjD,OAAO,IAAI,CAACnB,UAAU,CAACoB,KAAK,CAAQ,IAAI,CAAClB,QAAQ,GAAG,GAAG,GAAGQ,EAAE,EAAES,aAAa,EAAE;MAAEX,OAAO,EAAE,IAAI,CAACJ,UAAU;IAAE,CAAE,CAAC,CAC3GU,IAAI,CACDlB,UAAU,CAAEmB,KAAwB,IAAwB;MACxDC,MAAM,CAACC,KAAK,CAAC,oDAAoD,CAAC;MAClE,OAAOpB,EAAE,EAAE;IACf,CAAC,CAAC,CACL;EACL;EAEAwB,WAAWA,CAACX,EAAU;IAClB,OAAO,IAAI,CAACV,UAAU,CAACsB,MAAM,CAAC,IAAI,CAACpB,QAAQ,GAAG,GAAG,GAAGQ,EAAE,EAAE;MAAEF,OAAO,EAAE,IAAI,CAACJ,UAAU;IAAE,CAAE,CAAC;EAC3F;EAAC,QAAAmB,CAAA,G;qBAhDQzB,YAAY,EAAA0B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZhC,YAAY;IAAAiC,OAAA,EAAZjC,YAAY,CAAAkC;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}